spring.application.name=portfolio
# spring.datasource.url=jdbc:postgresql://database:5432/portfolio_tut
# spring.datasource.url=jdbc:postgresql://localhost:5432/portfolio_tut 
# for depoloying only
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

spring.datasource.driver-class-name=org.postgresql.Driver


# spring.datasource.username=lord_tut
# spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update
# spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# # Enable SQL logging
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true

# spring.jpa.properties.jakarta.persistence.schema-generation.scripts.action=create
# spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-target=create.sql
# spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-source=metadata
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true


debug=false
# spring.output.ansi.enabled=ALWAYS
logging.level.org.springframework.boot.autoconfigure=ERROR


spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true


server.port=8080

# Set the IP address the server binds to
# server.address.dev=localhost
management.endpoints.web.exposure.include=env
management.endpoint.env.enabled=true
management.endpoints.web.exposure.include=*
management.security.enabled=false
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
spring.http.converters.preferred-json-mapper=jackson

server.error.include-message=always
server.error.include-binding-errors=always
spring.servlet.multipart.max-file-size=12800KB
spring.servlet.multipart.max-request-size=12800KB
app.base-url=http://localhost:8080


